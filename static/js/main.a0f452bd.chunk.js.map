{"version":3,"sources":["component/TodoForm.js","component/TodoItem.js","component/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","onSubmit","e","preventDefault","text","id","Math","floor","random","completed","type","name","placeholder","onChange","target","value","disabled","TodoItem","item","className","checked","completeTodo","style","fontStyle","textDecoration","color","onClick","removeTodo","TodoList","todos","setTodos","updatedTodos","map","todo","removedArr","filter","displayTodo","newTodos","App","ReactDOM","render","document","getElementById"],"mappings":"+KAoCeA,MAlCf,SAAkBC,GAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAiBE,OACI,8BACI,uBAAMC,SAjBK,SAAAC,GAChBA,EAAEC,iBACFN,EAAMI,SAAS,CACXG,KAAKL,EACLM,GAAGC,KAAKC,MAAsB,IAAhBD,KAAKE,UACnBC,WAAU,IAGfT,EAAS,KASH,UACI,uBACGU,KAAK,OACLC,KAAK,OACLC,YAAY,YACZC,SAXK,SAAAX,GACjBF,EAASE,EAAEY,OAAOC,QAWNA,MAAOhB,IAEV,wBAAQiB,SAAoB,KAAVjB,EAAlB,4BCLDkB,MAtBf,SAAkBpB,GACf,IAAOqB,EAAQrB,EAARqB,KAON,OACI,8BACI,sBAAKC,UAAU,YAAf,UACI,uBAAOT,KAAK,WACXU,QAAUF,EAAKT,UACfI,SAAU,kBAAMhB,EAAMwB,aAAaH,EAAKb,OAEzC,mBAAGiB,MAAOJ,EAAKT,UAbL,CACnBc,UAAU,SACVC,eAAe,eACfC,MAAM,WAU+C,KAA5C,SAAmDP,EAAKd,OACxD,wBAAQsB,QAAS,kBAAM7B,EAAM8B,WAAWT,EAAKb,KAA7C,0BCsBDuB,MArCf,WACI,MAA0B9B,mBAAS,IAAnC,mBAAO+B,EAAP,KAAcC,EAAd,KAOMT,EAAe,SAAAhB,GACjB,IAAI0B,EAAeF,EAAMG,KAAI,SAAAC,GAI3B,OAHIA,EAAK5B,KAAOA,IACd4B,EAAKxB,WAAawB,EAAKxB,WAElBwB,KAETH,EAASC,IAGLJ,EAAa,SAAAtB,GACjB,IAAM6B,EAAa,YAAIL,GAAOM,QAAO,SAAAF,GAAI,OAAIA,EAAK5B,KAAOA,KAEzDyB,EAASI,IAGLE,EAAcP,EAAMG,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAwBf,KAAOe,EAAMZ,aAAcA,EAAcM,WAAYA,GAA9DM,EAAK5B,OAE5D,OAEI,gCACC,cAAC,EAAD,CAAUJ,SA1BC,SAACgC,GACd,IAAMI,EAAQ,CAAIJ,GAAJ,mBAAaJ,IAC3BC,EAASO,MAyBP,qBAAKlB,UAAU,YAAf,SACGiB,Q,MCtBGE,MATf,WACE,OACE,gCACG,uCACA,cAAC,EAAD,QCJPC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a0f452bd.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState('')\n\n  const handleSubmit = e => {\n       e.preventDefault()\n       props.onSubmit({\n           text:input,\n           id:Math.floor(Math.random() * 1000),\n           completed:false\n       })\n      \n      setInput('')\n   }\n\n   const handleChange = e => {\n       setInput(e.target.value)\n   }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input \n                   type='text'\n                   name='text'\n                   placeholder='Your Todo'\n                   onChange={handleChange}\n                   value={input}\n                />\n                <button disabled={input === \"\"}>Add ToDo</button>\n            </form>\n        </div>\n    )\n}\n\nexport default TodoForm\n","import React from \"react\";\n\n\nfunction TodoItem(props){\n   const {item} = props\n   const completedStyle = {\n       fontStyle:'italic',\n       textDecoration:\"line-through\",\n       color:\"#c3c3c3\"\n   }\n\n    return(\n        <div>\n            <div className=\"todo_item\">\n                <input type=\"checkbox\" \n                 checked= {item.completed}\n                 onChange={() => props.completeTodo(item.id)}\n                 />\n                <p style={item.completed ? completedStyle : null}>{item.text}</p>\n                <button onClick={() => props.removeTodo(item.id)}>Delete</button>\n            </div>\n        </div>\n   )\n}\n\nexport default TodoItem","import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\nimport TodoItem from './TodoItem'\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([])\n   \n    const addTodo = (todo) => {\n       const newTodos = [todo, ...todos]\n       setTodos(newTodos)\n    }\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n          return todo;\n        });\n        setTodos(updatedTodos);\n      };\n\n      const removeTodo = id => {\n        const removedArr = [...todos].filter(todo => todo.id !== id);\n    \n        setTodos(removedArr);\n      };\n\n      const displayTodo = todos.map(todo => <TodoItem key={todo.id} item ={todo} completeTodo={completeTodo} removeTodo={removeTodo}/>)\n\n    return (\n\n        <div>\n         <TodoForm onSubmit={addTodo}/>\n         <div className=\"todo_list\">\n           {displayTodo}\n         </div>\n       </div>\n    )\n}\n\nexport default TodoList\n","import React from 'react'\nimport TodoList from './component/TodoList'\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div>\n       <h2>Hello</h2>\n       <TodoList />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}